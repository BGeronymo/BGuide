[
["index.html", "BGuide - Cálculo 1 Prefácio", " BGuide - Cálculo 1 Bruno Geronymo 2018-03-10 Prefácio Este material trata-se de um manual de resoluções dos exercícios propostos no livro Um Curso de Cálculo, Volume 1, 5ª Edição de Hamilton Luiz Guidorizzi. Ao decorrer das resoluções o material busca apresentar, adicionalmente, resoluções computacionais através do software R de computação estatística para facilitar a visualização do problema e também o aprendizado da linguagem R. O material procura abordar todos os assuntos tratados no livro do Guidorizzi, seguindo também a mesma ordem dos capítulos, para facilitar a dinâmica de pesquisa por assuntos específicos. "],
["numeros-reais.html", "Capítulo 1 Números reais 1.1 Os Números Racionais 1.2 Os Números Reais", " Capítulo 1 Números reais 1.1 Os Números Racionais Por uma questão de notação admitiremos aqui que, sendo \\(r\\) um número racional, se \\(r \\leqslant 0\\), dizemos que \\(r\\) é não positivo. Da mesma forma, se \\(r \\geqslant 0\\), dizemos que \\(r\\) é não negativo. Vale acrescentar aqui algumas definições que poderão auxiliar na leitura do livro. Abscissa: Trata-se da coordenada de um ponto sobre uma reta. Irredutível: Algo que não se pode reduzir. Uma fração é dita irredutível quando está em sua forma mais reduzida possível. 1.2 Os Números Reais EXEMPLO 4. (Página 6) Suponha \\(x \\geqslant 0\\) e \\(y \\geqslant 0\\). Prove: \\(x \\leqslant y \\Rightarrow x^{2} \\leqslant y^{2}\\).       Resolução: \\[\\textrm{e} \\ \\left.\\begin{matrix} 0 \\leqslant x \\leqslant y\\\\ 0 \\leqslant x \\leqslant y \\end{matrix}\\right\\} \\overset{(OM)}{\\Rightarrow} \\ \\textrm{e} \\ \\left.\\begin{matrix} xx \\leqslant xy \\\\ xy \\leqslant yy \\end{matrix}\\right\\} \\overset{(O3)}{\\Rightarrow} xx \\leqslant xy \\leqslant yy \\Rightarrow xx \\leqslant yy \\Rightarrow x^{2} \\leqslant y^{2}\\]   # Estudo por simulação: ## Semente: set.seed(sum(utf8ToInt(&quot;BGuide&quot;))) ## Quantidade de números a serem gerados: n &lt;- 1000000 ## Gera-se aqui &#39;n&#39; números aleatórios seguindo a distribuição Uniforme de ## parâmetros &#39;min = 0&#39; e &#39;max = 1&#39;: x &lt;- runif(n) ## Em seguida geramos mais &#39;n&#39; números aleatórios seguindo uma distribuição ## Uniforme de parâmetros &#39;min = x&#39; e &#39;max = 1&#39;. Isto faz com que todos os ## números armazenados em y[i] sejam maiores do que os armazenados em x[i], com ## &#39;i&#39; variando de 1 a &#39;n&#39;. Mas não implica que y[i] seja maior do que x[j] com ## &#39;j&#39; também variando de 1 a &#39;n&#39; e &#39;i != j&#39;: y &lt;- runif(n, min = x) ## Soma a quantidade de verificações onde a afirmação &#39;x^2 &lt;= y^2&#39; for ## verdadeira: sum(x^2 &lt;= y^2) ## [1] 1000000 ## Observe que o resultado é 1.000.000, exatamente a quantidade de números ## uniformes no intervalo (0, 1) que foram gerados. Logo para todas as ## simulações obteve-se &#39;x^2 &lt;= y^2&#39;. ## Obs.: O resultado obtido por simulação não prova a propriedade acima, apenas ## cria evidências a favor dela. A simulação não é necessária aqui pois a ## propriedade pode ser provada analiticamente.   EXEMPLO 9. (Página 9) Resolva a inequação \\(\\frac{3x-1}{x+2} \\geqslant 5\\). Sendo \\(x &lt; 2\\): \\[\\frac{3x-1}{x+2} \\geqslant 5 \\Leftrightarrow 3x-1 \\leqslant 5(x+2).\\] Então o autor pergunta: Por quê? Sabemos que \\(1 &lt; 2\\), se multiplicássemos esta expressão por \\(-1\\) sem alterarmos o sentido da desigualdade teríamos \\(-1 &lt; -2\\) e sabemos que esta afirmação não é verdadeira. Considerando \\(a &lt; 0\\), se multiplicarmos uma desigualdade por \\(a\\) altera-se o sentido da desigualdade pois refletimos estes valores para o outro lado de um eixo com relação a origem a uma taxa de progressão \\(\\left | a \\right |\\). Porém, ao realizar este processo a direção de crescimento das unidades permanece a mesma (não é refletida).   # Exemplo gráfico ## O gráfico a seguir tem como objetivo a visualização do que foi dito ## anteriormente. Nele pode-se observar a propriedade &#39;x &lt;= y ==&gt; ky &lt;= kx&#39; ## quando &#39;k &lt; 0&#39;. No exemplo utilizaremos &#39;x = 2&#39;, &#39;y = 3&#39; e &#39;k = -2&#39;. ## Cria um vetor dos valores a serem plotados: xy &lt;- c(2, 3) k &lt;- -2 pontos &lt;- c(k*xy, xy) ## Atribui 0 aos valores de y pontos &lt;- cbind(pontos, 0) ## Atribui nome às coordenadas rownames(pontos) &lt;- c(&quot;kx&quot;, &quot;ky&quot;, &quot;x&quot;, &quot;y&quot;) ## Cria gráfico unidimensional: plot(pontos, bty = &#39;n&#39;, xaxt = &#39;n&#39;, yaxt = &#39;n&#39;, ylab = &#39;&#39;, xlab = &#39;&#39;, ylim = c(-1, 1), xlim = c(pontos[2, 1] - 2, pontos[4, 1] + 2), pch = 19, cex = 2) ## Eixo do sistema: arrows(x0 = pontos[2, 1] - 2, x1 = pontos[4, 1] + 2, y0 = 0, y1 = 0, lwd = 2) ## Retas de distância: arrows(x0 = pontos[1, 1], x1 = c(0, pontos[3, 1]), y0 = 0.4, y1 = 0.4, angle = 90, code = 3, col = &quot;red&quot;, lwd = 2, length = 0.1) arrows(x0 = pontos[2, 1], x1 = c(0, pontos[4, 1]), y0 = 0.7, y1 = 0.7, angle = 90, code = 3, col = &quot;red&quot;, lwd = 2, length = 0.1) ## Enumeração do eixo: axis(side = 1, seq(-7, 4, 1), pos = 0) ## Legenda: text(pontos, labels = rownames(pontos), pos = 3, offset = 1, font = 2) text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.4, pos = 3, font = 2) text(x = pontos[2, 1]/2, labels = rownames(pontos)[2], y = 0.7, pos = 3, font = 2) text(x = pontos[3, 1]/2, labels = rownames(pontos)[3], y = 0.4, pos = 3, font = 2) text(x = pontos[4, 1]/2, labels = rownames(pontos)[4], y = 0.7, pos = 3, font = 2) text(y = 0, x = (pontos[2, 1] + pontos[4, 1])/2, labels = &quot;Gráfico Unidimensional para Avaliação das Desigualdades&quot;, pos = 1, offset = 3, font = 2)   1.2.1 Exercícios Resolvidos (Página 10) Resolva a inequação. \\(3x+3 &lt; x+6\\) \\[\\begin{eqnarray} 3x+3 \\ \\ (-x) &amp;&lt;&amp; x+6 \\ \\ (-x) \\nonumber \\\\ 2x+3 &amp;&lt;&amp; 6 \\nonumber \\\\ 2x+3 \\ \\ (-3) &amp;&lt;&amp; 6 \\ \\ (-3) \\nonumber \\\\ 2x &amp;&lt;&amp; 3 \\nonumber \\\\ \\frac{2x}{2} &amp;&lt;&amp; \\frac{3}{2} \\nonumber \\\\ x &amp;&lt;&amp; \\frac{3}{2} \\nonumber \\end{eqnarray}\\]   # Resolução no R ## Para resolver a inequação pelo R consideraremos as seguintes expressões: ## &#39;f1(x) = 3x + 3&#39; e &#39;f2(x) = x + 6&#39;. f1 &lt;- function(x){ 3*x + 3 } f2 &lt;- function(x){ x + 6 } ## A desigualdade é &#39;f1(x) &lt; f2(x)&#39; logo &#39;f1(x) - f2(x) &lt; 0&#39;. Portanto ## queremos os valores de x para os quais &#39;f1(x) - f2(x)&#39; seja menor que zero. ## Começaremos achando a raiz da expressão &#39;f1(x) - f2(x)&#39;. ## A função abaixo utiliza iterações para achar a raiz em um intervalo ## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir ## grandes intervalos a um certo custo de tempo computacional (neste caso ## razoável). r &lt;- uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))$root r ## [1] 1.5 ## O resultado revela somente a raiz da função. No entanto queremos saber onde ## se localizam os valores positivos e negativos da função. ## Chamaremos nessa etapa a expressão &#39;f1(x) - f2(x)&#39; de &#39;g(x)&#39;. g &lt;- function(x){ f1(x) - f2(x) } ## Sabemos que a raiz da função &#39;g(x)&#39; é 1.5, logo basta verificarmos os ## valores ao redor da raiz. x &lt;- seq(from = r - 0.5, to = r + 0.5, by = 0.1) data.frame(x, g(x)) ## x g.x. ## 1 1.0 -1.0 ## 2 1.1 -0.8 ## 3 1.2 -0.6 ## 4 1.3 -0.4 ## 5 1.4 -0.2 ## 6 1.5 0.0 ## 7 1.6 0.2 ## 8 1.7 0.4 ## 9 1.8 0.6 ## 10 1.9 0.8 ## 11 2.0 1.0 ## Pode-se observar que para valores menores que 1.5, g(x) assume valores ## negativos. Logo os valores de x que satisfazem a inequação são dados por ## &#39;x &lt; 1.5&#39; # Exemplo Gráfico ## O gráfico a seguir representa f1(x), f2(x) e g(x). Observe que para valores ## menores que 1.5 temos f1(x) &lt; f2(x) e g(x) &lt; 0, para x = 1.5 temos ## f1(x) = f2(x) e g(x) = 0 e para valores maiores que 1.5 temos f1(x) &gt; f2(x) e ## g(x) &gt; 0. ## Vetor para determinar a amplitude do eixo das abscissas: v &lt;- c(r - 2, r + 2) ## Determina a amplitude do eixo das ordenadas: mini &lt;- min(f1(v), f2(v), g(v)) maxi &lt;- max(f1(v), f2(v), g(v)) ## Curvas: curve(f1, from = v[1], to = v[2], xlim = v, ylim = c(mini, maxi), lwd = 2, bty = &#39;n&#39;, xaxt = &#39;n&#39;, yaxt = &#39;n&#39;, ylab = &#39;&#39;, xlab = &#39;&#39;, main = &#39;Componentes da Inequação (Seção 1.2.1 Ex.1a)&#39;) curve(f2, from = v[1], to = v[2], add = TRUE, col = 2, lwd = 2) curve(g, from = v[1], to = v[2], add = TRUE, col = 3, lwd = 2) ## Eixos: arrows(x0 = v[1], x1 = v[2], y0 = 0, y1 = 0, lwd = 2, length = 0.1) arrows(x0 = 0, x1 = 0, y0 = mini, y1 = maxi, lwd = 2, length = 0.1) ## Comprimento da reta vertical que passa pelo ponto de intersecção: const &lt;- 1.5 minim &lt;- min(f1(r), f2(r), g(r)) - const maxim &lt;- max(f1(r), f2(r), g(r)) + const ## Reta vertical que passa pelo ponto de intersecção: segments(x0 = r, x1 = r, y0 = minim, y1 = maxim, lwd = 1) ## Enumeração dos eixos: axis(side = 1, c(seq(v[1] + 0.5, v[2] - 0.5, 1)), hadj = -1, padj = -1.5, pos = 0, cex.axis = 0.7) axis(side = 2, c(seq(mini + 1, maxi - 1, 2)), padj = 1, pos = 0, cex.axis = 0.7) ## Legenda: legend(v[1] + 0.75, maxi, col = c(1, 2, 3), c(&#39;f1(x)&#39;, &#39;f2(x)&#39;, &#39;g(x)&#39;), lwd = 2, text.font = 2) text(x = c(v[2], -0.125, r), y = c(-1, maxi, maxim + 1), labels = c(&quot;x&quot;, &quot;y&quot;, &quot;1.5&quot;), font = 2)   \\(x-3 &gt; 3x+1\\) \\[\\begin{eqnarray} x-3 \\ \\ (-x) &amp;&gt;&amp; 3x+1 \\ \\ (-x) \\nonumber \\\\ -3 &amp;&gt;&amp; 2x+1 \\nonumber \\\\ -3 \\ \\ (-1) &amp;&gt;&amp; 2x+1 \\ \\ (-1) \\nonumber \\\\ -4 &amp;&gt;&amp; 2x \\nonumber \\\\ \\frac{-4}{2} &amp;&gt;&amp; \\frac{2x}{2} \\nonumber \\\\ -2 &amp;&gt;&amp; x \\nonumber \\\\ x &amp;&lt;&amp; -2 \\nonumber \\end{eqnarray}\\]   # Resolução no R ## Para resolver a inequação pelo R consideraremos as seguintes expressões: ## &#39;f1(x) = x - 3&#39; e &#39;f2(x) = 3x + 1&#39;. f1 &lt;- function(x){ x - 3 } f2 &lt;- function(x){ 3*x + 1 } ## A desigualdade é &#39;f1(x) &lt; f2(x)&#39; logo &#39;f1(x) - f2(x) &gt; 0&#39;. Portanto ## queremos os valores de x para os quais &#39;f1(x) - f2(x)&#39; seja maior que zero. ## Começaremos achando a raiz da expressão &#39;f1(x) - f2(x)&#39;. ## A função abaixo utiliza iterações para achar a raiz em um intervalo ## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir ## grandes intervalos a um certo custo de tempo computacional (neste caso ## razoável). r &lt;- uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))$root r ## [1] -2 ## O resultado revela somente a raiz da função. No entanto queremos saber onde ## se localizam os valores positivos e negativos da função. ## Chamaremos nessa etapa a expressão &#39;f1(x) - f2(x)&#39; de &#39;g(x)&#39;. g &lt;- function(x){ f1(x) - f2(x) } ## Sabemos que a raiz da função &#39;g(x)&#39; é -2, logo basta verificarmos os ## valores ao redor da raiz. x &lt;- seq(from = r - 0.5, to = r + 0.5, by = 0.1) data.frame(x, g(x)) ## x g.x. ## 1 -2.5 1.0 ## 2 -2.4 0.8 ## 3 -2.3 0.6 ## 4 -2.2 0.4 ## 5 -2.1 0.2 ## 6 -2.0 0.0 ## 7 -1.9 -0.2 ## 8 -1.8 -0.4 ## 9 -1.7 -0.6 ## 10 -1.6 -0.8 ## 11 -1.5 -1.0 ## Pode-se observar que para valores menores que -2, g(x) assume valores ## positivos. Logo os valores de x que satisfazem a inequação são dados por ## &#39;x &lt; -2&#39; # Exemplo Gráfico ## O gráfico a seguir representa f1(x), f2(x) e g(x). Observe que para valores ## menores que -2 temos f1(x) &gt; f2(x) e g(x) &gt; 0, para x = 1.5 temos ## f1(x) = f2(x) e g(x) = 0 e para valores maiores que -2 temos f1(x) &lt; f2(x) e ## g(x) &lt; 0. ## Vetor para determinar a amplitude do eixo das abscissas: v &lt;- c(r - 3, r + 3) ## Determina a amplitude do eixo das ordenadas: mini &lt;- min(f1(v), f2(v), g(v)) maxi &lt;- max(f1(v), f2(v), g(v)) ## Curvas: curve(f1, from = v[1], to = v[2], xlim = v, ylim = c(mini, maxi), lwd = 2, bty = &#39;n&#39;, xaxt = &#39;n&#39;, yaxt = &#39;n&#39;, ylab = &#39;&#39;, xlab = &#39;&#39;, main = &#39;Componentes da Inequação (Seção 1.2.1 Ex.1b)&#39;) curve(f2, from = v[1], to = v[2], add = TRUE, col = 2, lwd = 2) curve(g, from = v[1], to = v[2], add = TRUE, col = 3, lwd = 2) ## Eixos: arrows(x0 = v[1], x1 = v[2], y0 = 0, y1 = 0, lwd = 2, length = 0.1) arrows(x0 = 0, x1 = 0, y0 = mini, y1 = maxi, lwd = 2, length = 0.1) ## Comprimento da reta vertical que passa pelo ponto de intersecção: const &lt;- 1.5 minim &lt;- min(f1(r), f2(r), g(r)) - const maxim &lt;- max(f1(r), f2(r), g(r)) + const ## Reta vertical que passa pelo ponto de intersecção: segments(x0 = r, x1 = r, y0 = minim, y1 = maxim, lwd = 1) ## Enumeração dos eixos: axis(side = 1, c(seq(v[1] + 0.5, v[2] - 0.5, 1)), hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7) axis(side = 4, c(seq(mini + 1, maxi - 1, 3)), padj = -1, pos = 0, cex.axis = 0.7) ## Legenda: legend(r + 0.5, -7, col = c(1, 2, 3), c(&#39;f1(x)&#39;, &#39;f2(x)&#39;, &#39;g(x)&#39;), lwd = 2, text.font = 2) text(x = c(v[2], -0.125, r), y = c(-1, maxi, maxim + 1), labels = c(&quot;x&quot;, &quot;y&quot;, &quot;1.5&quot;), font = 2) \\(2x-1 \\geqslant 5x+3\\) \\[\\begin{eqnarray} 2x-1 \\ \\ (-2x) &amp;\\geqslant&amp; 5x+3 \\ \\ (-2x) \\nonumber \\\\ -1 &amp;\\geqslant&amp; 3x+3 \\nonumber \\\\ -1 \\ \\ (-3) &amp;\\geqslant&amp; 3x+3 \\ \\ (-3) \\nonumber \\\\ -4 &amp;\\geqslant&amp; 3x \\nonumber \\\\ \\frac{-4}{3} &amp;\\geqslant&amp; \\frac{3x}{3} \\nonumber \\\\ -\\frac{4}{3} &amp;\\geqslant&amp; x \\nonumber \\\\ x &amp;\\leqslant&amp; -\\frac{4}{3} \\nonumber \\end{eqnarray}\\]   # Resolução no R ## Para resolver a inequação pelo R consideraremos as seguintes expressões: ## &#39;f1(x) = 2x - 1&#39; e &#39;f2(x) = 5x + 3&#39;. f1 &lt;- function(x){ 2*x - 1 } f2 &lt;- function(x){ 5*x + 3 } ## A desigualdade é &#39;f1(x) &gt;= f2(x)&#39; logo &#39;f1(x) - f2(x) &gt;= 0&#39;. Portanto ## queremos os valores de x para os quais &#39;f1(x) - f2(x)&#39; seja maior ou igual a ## zero. ## Começaremos achando a raiz da expressão &#39;f1(x) - f2(x)&#39;. ## A função abaixo utiliza iterações para achar a raiz em um intervalo ## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir ## grandes intervalos a um certo custo de tempo computacional (neste caso ## razoável). r &lt;- uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))$root r ## [1] -1.333333 ## O resultado revela somente a raiz da função. No entanto queremos saber onde ## se localizam os valores positivos e negativos da função. ## Chamaremos nessa etapa a expressão &#39;f1(x) - f2(x)&#39; de &#39;g(x)&#39;. g &lt;- function(x){ f1(x) - f2(x) } ## Sabemos que a raiz da função &#39;g(x)&#39; é -1.33, logo basta verificarmos os ## valores ao redor da raiz. x &lt;- seq(from = r - 0.5, to = r + 0.5, by = 0.1) data.frame(x, g(x)) ## x g.x. ## 1 -1.8333333 1.500000e+00 ## 2 -1.7333333 1.200000e+00 ## 3 -1.6333333 9.000000e-01 ## 4 -1.5333333 6.000000e-01 ## 5 -1.4333333 3.000000e-01 ## 6 -1.3333333 1.776357e-15 ## 7 -1.2333333 -3.000000e-01 ## 8 -1.1333333 -6.000000e-01 ## 9 -1.0333333 -9.000000e-01 ## 10 -0.9333333 -1.200000e+00 ## 11 -0.8333333 -1.500000e+00 ## Pode-se observar que para valores menores que -1.33, g(x) assume valores ## positivos. Logo os valores de x que satisfazem a inequação são dados por ## &#39;x &lt;= -1.33&#39; ou &#39;x &lt;= -4/3&#39;. # Exemplo Gráfico ## O gráfico a seguir representa f1(x), f2(x) e g(x). Observe que para valores ## menores que -1.33 temos f1(x) &gt; f2(x) e g(x) &gt; 0, para x = -1.33 temos ## f1(x) = f2(x) e g(x) = 0 e para valores maiores que -1.33 temos ## f1(x) &lt; f2(x) e g(x) &lt; 0. ## Vetor para determinar a amplitude do eixo das abscissas: v &lt;- c(r - 2, r + 2) ## Determina a amplitude do eixo das ordenadas: mini &lt;- min(f1(v), f2(v), g(v)) maxi &lt;- max(f1(v), f2(v), g(v)) ## Curvas: curve(f1, from = v[1], to = v[2], xlim = v, ylim = c(mini, maxi), lwd = 2, bty = &#39;n&#39;, xaxt = &#39;n&#39;, yaxt = &#39;n&#39;, ylab = &#39;&#39;, xlab = &#39;&#39;, main = &#39;Componentes da Inequação (Seção 1.2.1 Ex.1c)&#39;) curve(f2, from = v[1], to = v[2], add = TRUE, col = 2, lwd = 2) curve(g, from = v[1], to = v[2], add = TRUE, col = 3, lwd = 2) ## Eixos: arrows(x0 = v[1], x1 = v[2], y0 = 0, y1 = 0, lwd = 2, length = 0.1) arrows(x0 = 0, x1 = 0, y0 = mini, y1 = maxi, lwd = 2, length = 0.1) ## Comprimento da reta vertical que passa pelo ponto de intersecção: const &lt;- 1.5 minim &lt;- min(f1(r), f2(r), g(r)) - const maxim &lt;- max(f1(r), f2(r), g(r)) + const ## Reta vertical que passa pelo ponto de intersecção: segments(x0 = r, x1 = r, y0 = minim, y1 = maxim, lwd = 1) ## Enumeração dos eixos: axis(side = 1, c(seq(round(v[1]), round(v[2]) - 0.5, 1)), hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7) axis(side = 4, c(seq(round(mini) + 1, round(maxi) - 1, 3)), padj = -1, pos = 0, cex.axis = 0.7) ## Legenda: legend(r + 0.45, -7, col = c(1, 2, 3), c(&#39;f1(x)&#39;, &#39;f2(x)&#39;, &#39;g(x)&#39;), lwd = 2, text.font = 2) text(x = c(v[2], -0.125, r), y = c(-1, maxi, maxim + 1), labels = c(&quot;x&quot;, &quot;y&quot;, &quot;-4/3&quot;), font = 2)   \\(x+3 \\leqslant 6x-2\\) \\[\\begin{eqnarray} x+3 \\ \\ (-x) &amp;\\leqslant&amp; 6x-2 \\ \\ (-x) \\nonumber \\\\ 3 &amp;\\leqslant&amp; 5x-2 \\nonumber \\\\ 3 \\ \\ (+2) &amp;\\leqslant&amp; 5x-2 \\ \\ (+2) \\nonumber \\\\ 5 &amp;\\leqslant&amp; 5x \\nonumber \\\\ \\frac{5}{5} &amp;\\leqslant&amp; \\frac{5x}{5} \\nonumber \\\\ 1 &amp;\\leqslant&amp; x \\nonumber \\\\ x &amp;\\geqslant&amp; 1 \\nonumber \\end{eqnarray}\\]   # Resolução no R ## Para resolver a inequação pelo R consideraremos as seguintes expressões: ## &#39;f1(x) = x + 3&#39; e &#39;f2(x) = 6x - 2&#39;. f1 &lt;- function(x){ x + 3 } f2 &lt;- function(x){ 6*x - 2 } ## A desigualdade é &#39;f1(x) &lt;= f2(x)&#39; logo &#39;f1(x) - f2(x) &lt;= 0&#39;. Portanto ## queremos os valores de x para os quais &#39;f1(x) - f2(x)&#39; seja menor ou igual a ## zero. ## Começaremos achando a raiz da expressão &#39;f1(x) - f2(x)&#39;. ## A função abaixo utiliza iterações para achar a raiz em um intervalo ## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir ## grandes intervalos a um certo custo de tempo computacional (neste caso ## razoável). r &lt;- uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))$root r ## [1] 1 ## O resultado revela somente a raiz da função. No entanto queremos saber onde ## se localizam os valores positivos e negativos da função. ## Chamaremos nessa etapa a expressão &#39;f1(x) - f2(x)&#39; de &#39;g(x)&#39;. g &lt;- function(x){ f1(x) - f2(x) } ## Sabemos que a raiz da função &#39;g(x)&#39; é 1, logo basta verificarmos os valores ## ao redor da raiz. x &lt;- seq(from = r - 0.5, to = r + 0.5, by = 0.1) data.frame(x, g(x)) ## x g.x. ## 1 0.5 2.500000e+00 ## 2 0.6 2.000000e+00 ## 3 0.7 1.500000e+00 ## 4 0.8 1.000000e+00 ## 5 0.9 5.000000e-01 ## 6 1.0 -8.881784e-15 ## 7 1.1 -5.000000e-01 ## 8 1.2 -1.000000e+00 ## 9 1.3 -1.500000e+00 ## 10 1.4 -2.000000e+00 ## 11 1.5 -2.500000e+00 ## Pode-se observar que para valores maiores que 1, g(x) assume valores ## negativos. Logo os valores de x que satisfazem a inequação são dados por ## &#39;x &gt;= 1&#39;. # Exemplo Gráfico ## O gráfico a seguir representa f1(x), f2(x) e g(x). Observe que para valores ## menores que 1 temos f1(x) &gt; f2(x) e g(x) &gt; 0, para x = 1 temos f1(x) = f2(x) ## e g(x) = 0 e para valores maiores que 1 temos f1(x) &lt; f2(x) e g(x) &lt; 0. ## Vetor para determinar a amplitude do eixo das abscissas: v &lt;- c(r - 2, r + 2) ## Determina a amplitude do eixo das ordenadas: mini &lt;- min(f1(v), f2(v), g(v)) maxi &lt;- max(f1(v), f2(v), g(v)) ## Curvas: curve(f1, from = v[1], to = v[2], xlim = v, ylim = c(mini, maxi), lwd = 2, bty = &#39;n&#39;, xaxt = &#39;n&#39;, yaxt = &#39;n&#39;, ylab = &#39;&#39;, xlab = &#39;&#39;, main = &#39;Componentes da Inequação (Seção 1.2.1 Ex.1d)&#39;) curve(f2, from = v[1], to = v[2], add = TRUE, col = 2, lwd = 2) curve(g, from = v[1], to = v[2], add = TRUE, col = 3, lwd = 2) ## Eixos: arrows(x0 = v[1], x1 = v[2], y0 = 0, y1 = 0, lwd = 2, length = 0.1) arrows(x0 = 0, x1 = 0, y0 = mini, y1 = maxi, lwd = 2, length = 0.1) ## Comprimento da reta vertical que passa pelo ponto de intersecção: const &lt;- 1.5 minim &lt;- min(f1(r), f2(r), g(r)) - const maxim &lt;- max(f1(r), f2(r), g(r)) + const ## Reta vertical que passa pelo ponto de intersecção: segments(x0 = r, x1 = r, y0 = minim, y1 = maxim, lwd = 1) ## Enumeração dos eixos: axis(side = 1, c(seq(round(v[1]), round(v[2]) - 0.5, 1)), hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7) axis(side = 2, c(seq(round(mini) + 1, round(maxi) - 1, 4)), padj = 1, pos = 0, cex.axis = 0.7) ## Legenda: legend(r - 0.75, 15, col = c(1, 2, 3), c(&#39;f1(x)&#39;, &#39;f2(x)&#39;, &#39;g(x)&#39;), lwd = 2, text.font = 2) text(x = c(v[2], 0.125, r), y = c(-1, maxi, maxim + 1), labels = c(&quot;x&quot;, &quot;y&quot;, &quot;1&quot;), font = 2) "],
["sem-titulo.html", "Capítulo 2 Sem Título", " Capítulo 2 Sem Título "],
["sem-titulo-1.html", "Capítulo 3 Sem Título", " Capítulo 3 Sem Título "],
["sem-titulo-2.html", "Capítulo 4 Sem Título", " Capítulo 4 Sem Título "],
["sem-titulo-3.html", "Capítulo 5 Sem Título", " Capítulo 5 Sem Título "],
["referencias.html", "Referências", " Referências "]
]
