##  Enumeração dos eixos:
axis(side = 1, c(seq(round(v[1]) + 0.5, round(v[2]) - 0.5, 1)),
hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7)
##  Enumeração dos eixos:
axis(side = 1, c(seq(round(v[1]), round(v[2]) - 0.5, 1)),
hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7)
axis(side = 4, c(seq(mini + 1, maxi - 1, 3)),
padj = -1, pos = 0, cex.axis = 0.7)
axis(side = 4, c(seq(round(mini) + 1, round(maxi) - 1, 3)),
padj = -1, pos = 0, cex.axis = 0.7)
##  Curvas:
curve(f1, from = v[1], to = v[2], xlim = v, ylim = c(mini, maxi), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, from = v[1], to = v[2], add = TRUE, col = 2, lwd = 2)
curve(g, from = v[1], to = v[2], add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = v[1], x1 = v[2],
y0 = 0, y1 = 0, lwd = 2, length = 0.1)
arrows(x0 = 0, x1 = 0,
y0 = mini, y1 = maxi, lwd = 2, length = 0.1)
##  Comprimento da reta vertical que passa pelo ponto de intersecção:
const <- 1.5
minim <- min(f1(r), f2(r), g(r)) - const
maxim <- max(f1(r), f2(r), g(r)) + const
##  Reta vertical que passa pelo ponto de intersecção:
segments(x0 = r, x1 = r,
y0 = minim, y1 = maxim, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(round(v[1]), round(v[2]) - 0.5, 1)),
hadj = -0.25, padj = -1.5, pos = 0, cex.axis = 0.7)
axis(side = 4, c(seq(round(mini) + 1, round(maxi) - 1, 3)),
padj = -1, pos = 0, cex.axis = 0.7)
##  Legenda:
legend(r + 0.5, -7, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(v[2], -0.125, r), y = c(-1, maxi, maxim + 1),
labels = c("x", "y", "-4/3"), font = 2)
des <- function(f1, f2, sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des(x-3, 3*x+1, '<')
des <- function(f1 <- function(x), f2 <- function(x), sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des <- function(f1 <- function(x){}, f2 <- function(x){}, sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des <- function(f1 , f2, sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des(x-3, 3*x+1, '<')
des <- function(f1(x) , f2, sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des <- function(f1 , f2, sent){
x <- f1 - f2
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1 - f2}, c(-100, 100))$root
return(r)
}
des(x-1, x+1, 'oi')
f1 <- function(x){x-3}
f2 <- function(x){3*x+1}
des(f1, f2, 'oi')
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
return(r)
}
des(f1, f2, 'oi')
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
return(r, 2*r)
}
des(f1, f2, 'oi')
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
return(c(r, 2*r))
}
des(f1, f2, 'oi')
paste('oi', 'oi')
paste('x >', r)
r
r <- -2
paste('x', r)
clear
g <- function(x){
f1(x) - f2(x)
}
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
f1 <- function(x){
3*x + 3
}
f2 <- function(x){
x + 6
}
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
ab <- c(r - 1, r + 1)
g(ab)[1] > g(ab)[2]
if x>0
if 1>2
if 2>1 :
if 2>1:
print(2)
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if sent == '>':
if g(ab)[1] > g(ab)[2]:
return(paste('x <', r))
else:
return(paste('x >', r))
if sent == '>=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
if sent == '<':
if g(ab)[1] > g(ab)[2]:
return(paste('x >', r))
else:
return(paste('x <', r))
if sent == '<=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if sent == '>':
if g(ab)[1] > g(ab)[2]:
return(paste('x <', r))
else:
return(paste('x >', r))
if sent == '>=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
if sent == '<':
if g(ab)[1] > g(ab)[2]:
return(paste('x >', r))
else:
return(paste('x <', r))
if sent == '<=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'):
if g(ab)[1] > g(ab)[2]:
return(paste('x <', r))
else:
return(paste('x >', r))
if sent == '>=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
if sent == '<':
if g(ab)[1] > g(ab)[2]:
return(paste('x >', r))
else:
return(paste('x <', r))
if sent == '<=':
if g(ab)[1] > g(ab)[2]:
return(paste('x <=', r))
else:
return(paste('x >=', r))
}
des <- function(f1 , f2, sent){
g <- function(x){
f1(x) - f2(x)
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if (sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if (sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if (sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if (sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 , f2, sent){
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if (sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if (sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if (sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if (sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
sent <- sent
if (sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if (sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if (sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if (sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if (sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if (sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if (sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if(sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if(sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if(sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 , f2, sent){
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if(sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if(sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if(sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 , f2, sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if(sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if(sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if(sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
des <- function(f1 = function(x) ,f2 = function(x), sent){
r <- uniroot(function(x){f1(x) - f2(x)}, c(-100, 100))$root
g <- function(x){
f1(x) - f2(x)
}
ab <- c(r - 1, r + 1)
if(sent == '>'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <', r)
} else {
return(paste('x >', r))
}
}
if(sent == '>='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
if(sent == '<'){
if (g(ab)[1] > g(ab)[2]){
return(paste('x >', r))
} else {
return(paste('x <', r))
}
}
if(sent == '<='){
if (g(ab)[1] > g(ab)[2]){
return(paste('x <=', r))
} else {
return(paste('x >=', r))
}
}
}
oi <- function( f = function(x)){
return(f)
}
oi <- function( f <- function(x)){
return(f)
}
oi <- function(x){
return(x)
}
oi <- function(function(x)){
return(x)
}
oi <- function(function(x){}){
return(x)
}
oi <- function(function(x){
x
}){
return(x)
}
oi <- function(x){
return(x)
}
oi(1)
oi(x-1)
oi('x-1')
oi(oi(1))
install_github("yihui/knitr")
library(devtools)
install_github("yihui/knitr")
