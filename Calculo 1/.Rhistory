##  A desigualdade é 'f1(x) < f2(x)' logo 'f1(x) - f2(x) < 0'. Logo queremos os
## valores de x para os quais 'f1(x) - f2(x)' seja menor que zero.
uniroot(function(x){f1(x) - f2(x)}, c(-100000, 100000))
##  A desigualdade é 'f1(x) < f2(x)' logo 'f1(x) - f2(x) < 0'. Logo queremos os
## valores de x para os quais 'f1(x) - f2(x)' seja menor que zero.
uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))
##  A desigualdade é 'f1(x) < f2(x)' logo 'f1(x) - f2(x) < 0'. Logo queremos os
## valores de x para os quais 'f1(x) - f2(x)' seja menor que zero.
##  Começaremos achando a raiz da expressão 'f1(x) - f2(x)'.
##  A função abaixo utiliza utiliza iterações para achar a raiz em um intervalo
## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir
## grandes intervalos a um certo custo de tempo computacional (neste caso
## razoável).
uniroot(function(x){f1(x) - f2(x)}, c(-10, 10))$root
##  A desigualdade é 'f1(x) < f2(x)' logo 'f1(x) - f2(x) < 0'. Logo queremos os
## valores de x para os quais 'f1(x) - f2(x)' seja menor que zero.
##  Começaremos achando a raiz da expressão 'f1(x) - f2(x)'.
##  A função abaixo utiliza utiliza iterações para achar a raiz em um intervalo
## pré-determinado, utiliza-se aqui o intervalo (-10, 10) mas é possível inserir
## grandes intervalos a um certo custo de tempo computacional (neste caso
## razoável).
uniroot(function(x){f1(x) - f2(x)}, c(-1000000000000000000, 10000000000000000))$root
##  O resultado revela somente a raiz da função. No entanto queremos saber onde
## se localizam os valores positivos e negativos da função.
##  Chamaremos nessa etapa a expressão 'f1(x) - f2(x)' de 'g(x)'.
g <- function(x){
f1(x) - f2(x)
}
?seq
##  Sabemos que a raiz da função 'g(x)' é 1.5, logo basta verificarmos os
## valores ao redor da raiz.
x <- seq(from = 1, to = 2, by = 0.1)
g(x)
names(g(x))
print(g(x), names = c(1,2,3,4,5,6,7,8,9,10))
print(g(x), names = c(1,2,3,4,5,6,7,8,9,10,11))
data.frame(x, g(x))
curve(f1,from=1e-3,to=1e8,log="xy")
curve(f1,from=1e-3,to=1e8)
curve(f1, from = 0, to = 10)
curve(f2,add=TRUE,col=2)
curve(f1, from = -10, to = 10)
curve(f2,add=TRUE,col=2)
curve(f1, from = -5, to = 5)
curve(f2,add=TRUE,col=2)
curve(f1, from = -3.5, to = 6.5)
curve(f2,add=TRUE,col=2)
curve(f1, from = -3.5, to = 6.5, lwd = 2)
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(f1, from = -3.5, to = 6.5, lwd = 2, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2)
#      bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2)
#      bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 0.5), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 0.5), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
?axis
axis(side = 1, seq(-7, 22, 1), pos = 1)
axis(side = 1, seq(-7, 22, 1), pos = 3)
axis(side = 0, seq(-7, 22, 1), pos = 0)
axis(side = 2, seq(-7, 22, 1), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
axis(side = 2, seq(-7, 22, 1), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
axis(side = 2, seq(-6, 20, 2), pos = 0)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'oioi')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
axis(side = 2, seq(-6, 20, 2), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
## Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
axis(side = 2, seq(-6, 20, 2), pos = 0)
## Legenda
legend(-3, 18, 'oioi')
## Legenda
?legend
legend(-3, 18, c('f1(x)', 'f2(x)', 'g(x)'), col = c(1, 2, 3))
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'))
legend(-3, 18, col = c(1, 2, 3), c('f1(x', 'f2(x)', 'g(x)'))
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'), lwd = 2)
## Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'), lwd = 2, font = 2)
?legend
## Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'), lwd = 2, text.font = 2)
abline(v = 1.6)
##  Ponto de intersecção:
abline(v = 1.5, lwd = 2, ylim = c(-6, 20))
?abline
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
abline(v = 1.5, ylim = c(-6, 20), lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
abline(v = 1.5, ylim = c(-2, 2), lwd = 2)
##  Ponto de intersecção:
abline(v = 1.5, ylim = c(-2, 2), lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, seq(-3, 6, 1), pos = 0)
axis(side = 2, seq(-6, 20, 2), pos = 0)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segment(v = 1.5, ylim = c(-2, 2), lwd = 2)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(seq(-6, -2, 2), seq(2, 20, 2)), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
##  Ponto de intersecção:
segments(v = 1.5, ylim = c(-2, 2), lwd = 2)
?segments
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 20, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(seq(-6, -2, 2), seq(2, 20, 2)), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
f1 <- function(x){
3*x + 3
}
f2 <- function(x){
x + 6
}
g <- function(x){
f1(x) - f2(x)
}
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
6.5*3+3
text(x = c(7, 0), y = c(0, 23), labels = c("x", "y"))
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação',
xlim = c(-3.5, 8))
curve(f2, add = TRUE, col = 2, lwd = 2)
curve(g, add = TRUE, col = 3, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação',
xlim = c(-3.5, 8))
curve(f2, from = -3.5, to = 6.5, add = TRUE, col = 2, lwd = 2)
curve(g, from = -3.5, to = 6.5, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(7.5, 0), y = c(0, 23.5), labels = c("x", "y"))
text(x = c(7.5, 0), y = c(0, 23.5), labels = c("x", "y"), font = 2)
text(x = c(7, 0), y = c(0, 23.5), labels = c("x", "y"), font = 2)
text(x = c(7, 0, -0.3), y = c(0, 23.5, -0.3), labels = c("x", "y", "0"), font = 2)
text(x = c(7, 0, -0.2), y = c(0, 23.5, -0.5), labels = c("x", "y", "0"), font = 2)
text(x = c(7, 0, -0.2), y = c(0, 23.5, -0.7), labels = c("x", "y", "0"), font = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação',
xlim = c(-3.5, 8))
curve(f2, from = -3.5, to = 6.5, add = TRUE, col = 2, lwd = 2)
curve(g, from = -3.5, to = 6.5, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(7, 0, -0.2), y = c(0, 23.5, -0.7), labels = c("x", "y", "0"), font = 2)
text(x = c(6.8, 0, -0.2), y = c(0, 23.5, -0.7), labels = c("x", "y", "0"), font = 2)
text(x = c(6.75, 0, -0.2), y = c(0, 23.5, -0.7), labels = c("x", "y", "0"), font = 2)
text(x = c(6.75, 0, -0.2), y = c(0, 23.5, -1), labels = c("x", "y", "0"), font = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação',
xlim = c(-3.5, 8))
curve(f2, from = -3.5, to = 6.5, add = TRUE, col = 2, lwd = 2)
curve(g, from = -3.5, to = 6.5, add = TRUE, col = 3, lwd = 2)
##  Curvas:
curve(f1, from = -3.5, to = 6.5, lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação',
xlim = c(-3.5, 7))
curve(f2, from = -3.5, to = 6.5, add = TRUE, col = 2, lwd = 2)
curve(g, from = -3.5, to = 6.5, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(6.75, 0, -0.2), y = c(0, 23.5, -1), labels = c("x", "y", "0"), font = 2)
locator()
text(x = c(6.75, 0, -0.2, 1.5), y = c(0, 23.5, -1, 15),
labels = c("x", "y", "0", "1.5"), font = 2)
3*-3.5+3
##  Curvas:
curve(f1, from = -3.5, to = 6.5, xlim = c(-3.5, 7), ylim = c(-7.5, 24), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
##  Curvas:
curve(f1, from = -3.5, to = 6.5, xlim = c(-3.5, 7), ylim = c(-7.5, 24), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, from = -3.5, to = 6.5, add = TRUE, col = 2, lwd = 2)
curve(g, from = -3.5, to = 6.5, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(6.75, 0, -0.2, 1.5), y = c(0, 23.5, -1, 15),
labels = c("x", "y", "0", "1.5"), font = 2)
-2*3+3
##  Curvas:
curve(f1, from = -2, to = 4, xlim = c(-2, 4.5), ylim = c(-3, 16), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, from = -2, to = 4, add = TRUE, col = 2, lwd = 2)
curve(g, from = -2, to = 4, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -3.5, x1 = 6.5,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -7.5, y1 = 22.5, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -6, y1 = 14, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-3, -1, 1), seq(1, 6, 1)), pos = 0)
axis(side = 2, c(-4, 4, 8, 12, 16), pos = 0)
##  Legenda
legend(-3, 18, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(6.75, 0, -0.2, 1.5), y = c(0, 23.5, -1, 15),
labels = c("x", "y", "0", "1.5"), font = 2)
##  Curvas:
curve(f1, from = -2, to = 4, xlim = c(-2, 4.5), ylim = c(-3, 16), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, from = -2, to = 4, add = TRUE, col = 2, lwd = 2)
curve(g, from = -2, to = 4, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -2, x1 = 4,
y0 = 0, y1 = 0, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -3, y1 = 15, lwd = 2)
arrows(x0 = 0, x1 = 0,
y0 = -4, y1 = 15, lwd = 2)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -2, y1 = 10, lwd = 1)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -2, y1 = 9, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-2, -1, 1), seq(1, 3, 1)), pos = 0)
##  Eixos:
arrows(x0 = -2.5, x1 = 4,
y0 = 0, y1 = 0, lwd = 2)
axis(side = 2, c(-3, 3, 6, 9), pos = 0)
axis(side = 2, c(-3, 3, 6, 9, 12), pos = 0)
##  Legenda
legend(-2.25, 13, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
3*4+3
text(x = c(4.25, 0, -0.2, 1.5), y = c(0, 15.5, -1, 11),
labels = c("x", "y", "0", "1.5"), font = 2)
text(x = c(4.25, 0, -0.2, 1.5), y = c(0, 16, -1, 11),
labels = c("x", "y", "0", "1.5"), font = 2)
text(x = c(4.15, 0, -0.2, 1.5), y = c(0, 15.75, -1, 11),
labels = c("x", "y", "0", "1.5"), font = 2)
##  Curvas:
curve(f1, from = -2, to = 4, xlim = c(-2, 4.5), ylim = c(-3, 16), lwd = 2,
bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
main = 'Componentes da Inequação')
curve(f2, from = -2, to = 4, add = TRUE, col = 2, lwd = 2)
curve(g, from = -2, to = 4, add = TRUE, col = 3, lwd = 2)
##  Eixos:
arrows(x0 = -2.5, x1 = 4,
y0 = 0, y1 = 0, lwd = 2, length = 0.1)
arrows(x0 = 0, x1 = 0,
y0 = -4, y1 = 15, lwd = 2, length = 0.1)
##  Ponto de intersecção:
segments(x0 = 1.5, x1 = 1.5,
y0 = -2, y1 = 10, lwd = 1)
##  Enumeração dos eixos:
axis(side = 1, c(seq(-2, -1, 1), seq(1, 3, 1)), pos = 0)
axis(side = 2, c(-3, 3, 6, 9, 12), pos = 0)
##  Legenda
legend(-2.25, 13, col = c(1, 2, 3), c('f1(x)', 'f2(x)', 'g(x)'),
lwd = 2, text.font = 2)
text(x = c(4.15, 0, -0.2, 1.5), y = c(0, 15.75, -1, 11),
labels = c("x", "y", "0", "1.5"), font = 2)
