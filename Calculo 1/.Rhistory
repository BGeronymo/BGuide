sample(1)
sample()
runif
runif()
runif(0,1)
runif(0,1)
runif(1)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
runif(1, 0.4)
?runif
x <- runif(1)
y <- runif(1, x)
x^2 <= y^2
x
y
x^2 < y^2
runif(1, 0, inf)
runif(1, 0, "inf")
?apply
x <- runif(1000)
y <- runif(1000, min = x)
x < y
x^2 <= y^2
x <- runif(1000000)
y <- runif(1000000, x)
x^2 <= y^2
isTRUE(x^2 <= y^2)
isTRUE(x^2 >= y^2)
which(x^2 <= y^2)
which(x^2 > y^2)
sum(x^2 > y^2)
sum(x^2 <= y^2)
head(x)
head(y)
set.seed('BGuide')
ascii('b')
utf8ToInt("Hello")
utf8ToInt("BGuide")
sum(utf8ToInt("BGuide"))
set.seed(sum(utf8ToInt("BGuide")))
axis(1)
Axis(x = NULL, at = NULL, …, side, labels = NULL)
Axis(x = 1)
Axis(side = 1)
print(2)
Axis(at = 1)
Axis(x = seq(0, 10, by = 0.01), at = 1)
Axis(x = seq(0, 10, by = 0.01), at = 1, side = 10)
stripchart(c(1,2))
?stripchart
stripchart(c(1, 2), axes = F)
stripchart(c(1, 2), axes = T)
stripchart(c(-2, -1, 1, 2))
stripChart(c(-2, -1, 1, 2))
??stripchart
??stripChart
install.packages("stripChart")
stripChart(c(-2, -1, 1, 2), vestical = T)
stripchart(c(-2, -1, 1, 2), vertical = T)
stripchart(c(-2, -1, 1, 2), add = T)
stripchart(c(-2, -1, 1, 2), add = T)
stripchart(c(-2, -1, 1, 2))
stripchart(c(-2, -1, 1, 2), log = 'i')
stripchart(c(-2, -1, 1, 2), log = c(2, 3, 4, 5))
plot( 1:100 , rep( 1 , 100 ) , col = 'red', cex = 3 , pch = 16 , main  = 'one dimensional gradient')
plot( 1:100 , rep( 1 , 100 ) , col = 'red', cex = 3 , pch = 16 , main  = 'one dimensional gradient', ylim = c(0.9, 1.1))
stripchart(c(-4, -3, 3, 4))
x <- c(-6, -4, 2, 3)
stripchart(x)
locate()
install.packages("spark")
library(spark)
locate()
locator()
?legend
?text
loc <- locator()
loc
loc$x
text(loc$x, loc$y, labels = c("ay", "ax", "x", "y"))
abline(v = 0, col = 'red', lwd = 2)
abline(h = 0)
abline(h = T)
stripchart(x)
point <- c(-6, -4, 2, 3)
points <- c(-6, -4, 2, 3)
stripchart(points, col = 'red')
loc <- locator()
loc
x <- loc$x
y <- loc$y
abline(v = 0, col = 'red', lwd = 2)
abline(h = T, lwd = 2)
stripchart(points, col = 'red')
abline(h = T, lwd = 1)
stripchart(points, col = 'red', lwd = 2)
stripchart(points, col = 'red', lwd = 3)
stripchart(points, col = 'red', lwd = 3, xlim = c(-6, 4))
stripchart(points, col = 'red', lwd = 3, xlim = c(-8, 4))
abline(h = T, lwd = 1)
abline(v = 0, col = 'red', lwd = 2)
text(x, y, labels = c('ky', 'kx', 'x', 'y'), col = 'red', lwd = 2)
text(x, y, labels = c('ky', 'kx', 'x', 'y'), col = 'red', lwd = 3)
arrows(x0 = -8, x1 = 4)
arrows(x0 = -8, y0 = 1, x1 = 4, y1 = 1)
## Cria um vetor dos valores a serem plotados:
points <- c(-6, -4, 2, 3)
## Cria gráfico unidimensional:
stripchart(points, col = "red", lwd = 3, xlim = c(-8, 4))
## Linha da origem:
abline(v = 0, col = "red", lwd = 2)
x
y
## Cria gráfico unidimensional:
stripchart(points, col = "red", lwd = 3, xlim = c(-8, 4))
## Linha da origem:
abline(v = 0, col = "red", lwd = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 1, x1 = 4, y1 = 1)
## Eixo do sistema:
arrows(x0 = -8, y0 = 1, x1 = 4, y1 = 1, lwd = 2)
## Coordenadas da legenda:
x <- c(-6.007753, -4.010723, 1.992396, 2.990910)
y <- rep(1.024795, 4)
## Legenda:
text <- (x, y, labels = c("ky", "kx", "x", "y"), col = "red", lwd = 3)
## Legenda:
text(x, y, labels = c("ky", "kx", "x", "y"), col = "red", lwd = 3)
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
points <- c(k*xy, xy)
points
stripchar(pontos)
stripchart(pontos)
points
stripchart(points)
stripchart(points, main = 'oi')
stripchart(points, title = 'oi')
x<-c(-1.5,2,2.5,-2,.05)
## Make y-value=0
x<-cbind(x,0)
## Plotting without box or axis with dot, representing data points
plot(x,bty='n',xaxt='n',yaxt='n',ylab='',xlab='',pch=21,cex=2)
## Placing axis at y-value in order to pass through points with sequence wider than range
axis(side=1,seq(-4,4,1),pos=0)  ## Using y-value as position
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
axis(side=1,seq(-8,6,1),pos=0)
axis(side=1,seq(-7,4,1),pos=0)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
axis(side=1,seq(-7,4,1),pos=0)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
text(y=0,x=0,labels='One-Dimensional Plot',pos=1,offset=3,font=2)
## Placing x-values & x-axis label onto plot
text(x,labels=x[,1],pos=3,offset=1,font=2)
x<-c(-1.5,2,2.5,-2,.05)
## Make y-value=0
x<-cbind(x,0)
## Plotting without box or axis with dot, representing data points
plot(x,bty='n',xaxt='n',yaxt='n',ylab='',xlab='',pch=21,cex=2)
## Placing axis at y-value in order to pass through points with sequence wider than range
axis(side=1,seq(-4,4,1),pos=0)  ## Using y-value as position
## Placing x-values & x-axis label onto plot
text(x,labels=x[,1],pos=3,offset=1,font=2)
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
## Legenda:
text(pontos,labels = pontos[, 1], pos = 3, offset = 1, font = 2)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
axis(side=1,seq(-7,4,1),pos=0)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Legenda:
text(pontos,labels = pontos[, 1], pos = 3, offset = 1, font = 2)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
axis(side=1,seq(-7,4,1),pos=0)
## Linha da origem:
abline(v = 0, col = "red", lwd = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Legenda:
text(pontos,labels = c("ky", "kx", "x", "y"), pos = 3, offset = 1, font = 2)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Legenda:
text(pontos,labels = c("ky", "kx", "x", "y"), pos = 3, offset = 1, font = 2)
text(x, y, labels = c("ky", "kx", "x", "y"), col = "red", lwd = 3)
## Coordenadas da legenda:
x <- c(-6.007753, -4.010723, 1.992396, 2.990910)
y <- rep(1.05, 4)
text(x, y, labels = c("ky", "kx", "x", "y"), col = "red", lwd = 3)
pontos <- c(k*xy, xy)
pontos
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
pontos
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(x = 2, y = 3)
k <- -2
pontos <- c(k*xy, xy)
pontos
names(pontos)
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
names(pontos)
names(pontos) <- c("ky", "kx", "x", "y")
pontos
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
rownames(pontos) <- c("ky", "kx", "x", "y")
pontos
rownames(pontos) <- c("kx", "ky", "x", "y")
pontos
names(pontos)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
axis(side=1,seq(-7,4,1),pos=0)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
?arrows
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
## Atribui nome às coordenadas
rownames(pontos) <- c("kx", "ky", "x", "y")
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = 0, x = 0,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
text(y = -1.5, x = 0,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 6), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = -1.5, x = 0,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
text(y = 0, x = -1.5,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 5), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 6, y1 = 0, lwd = 2)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = 0, x = -1.5,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 5, y1 = 0, lwd = 2)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 5), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 5, y1 = 0, lwd = 2)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = 0, x = -1.5,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
## Retas de distância:
arrows(x0 = -4, x1 = 2, y0 = 0.3, y1 = 0.3, angle = 90)
## Retas de distância:
arrows(x0 = -4, x1 = 2, y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, arr.length = 0.1)
## Retas de distância:
Arrows(x0 = -4, x1 = 2, y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, arr.length = 0.1)
?Arrows
??Arrows
## Retas de distância:
arrows(x0 = -4, x1 = 2, y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(-8, 5), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = -8, y0 = 0, x1 = 5, y1 = 0, lwd = 2)
## Retas de distância:
arrows(x0 = -4, x1 = 2, y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = 0, x = -1.5,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
arrows(x0 = -6, x1 = 4, y0 = 0.6, y1 = 0.6,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
arrows(x0 = -6, x1 = 3, y0 = 0.6, y1 = 0.6,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Retas de distância:
arrows(x0 = -4, x1 = c(2,3), y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
pontos
pontos$ky
pontos[,1]
pontos[,1]$ky
pontos$x
pontos[2, 1]
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(pontos[2, 1] - 2, pontos[4, 1] + 2), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = pontos[2, 1] - 2, x1 = pontos[4, 1] + 2,
y0 = 0, y1 = 0, lwd = 2)
pontos <- c(k*xy, xy)
pontos$x
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(x = 2, y = 3)
xy
xy$x
## Atribui nome às coordenadas
rownames(pontos) <- c("kx", "ky", "x", "y")
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
## Atribui nome às coordenadas
rownames(pontos) <- c("kx", "ky", "x", "y")
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(pontos[2, 1] - 2, pontos[4, 1] + 2), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = pontos[2, 1] - 2, x1 = pontos[4, 1] + 2,
y0 = 0, y1 = 0, lwd = 2)
pontos
## Retas de distância:
arrows(x0 = pontos[1, 1], x1 = c(0, pontos[3, 1]),
y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
arrows(x0 = pontos[2, 1], x1 = c(0, pontos[4, 1]),
y0 = 0.6, y1 = 0.6,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(y = 0, x = -1.5,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
text(x = 1, y = 0.3, labels = 'oi')
text(x = 1, y = 0.4, labels = 'oi')
?text
text(x = pontos[1, 1]/2, y = 0.3, pos = 3)
text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.3, pos = 3)
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(pontos[2, 1] - 2, pontos[4, 1] + 2), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = pontos[2, 1] - 2, x1 = pontos[4, 1] + 2,
y0 = 0, y1 = 0, lwd = 2)
## Retas de distância:
arrows(x0 = pontos[1, 1], x1 = c(0, pontos[3, 1]),
y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
arrows(x0 = pontos[2, 1], x1 = c(0, pontos[4, 1]),
y0 = 0.6, y1 = 0.6,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.3, pos = 3)
text(x = pontos[2, 1]/2, labels = rownames(pontos)[1], y = 0.6, pos = 3)
text(x = pontos[3, 1]/2, labels = rownames(pontos)[1], y = 0.3, pos = 3)
text(x = pontos[4, 1]/2, labels = rownames(pontos)[1], y = 0.6, pos = 3)
text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.3,
pos = 3, offset = 1)
text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.3,
pos = 3, offset = 1, font = 2)
################################################################################
## Cria um vetor dos valores a serem plotados:
xy <- c(2, 3)
k <- -2
pontos <- c(k*xy, xy)
## Atribui 0 aos valores de y
pontos <- cbind(pontos, 0)
## Atribui nome às coordenadas
rownames(pontos) <- c("kx", "ky", "x", "y")
## Cria gráfico unidimensional:
plot(pontos, bty = 'n', xaxt = 'n', yaxt = 'n', ylab = '', xlab = '',
xlim = c(pontos[2, 1] - 2, pontos[4, 1] + 2), pch = 19, cex = 2)
## Eixo do sistema:
arrows(x0 = pontos[2, 1] - 2, x1 = pontos[4, 1] + 2,
y0 = 0, y1 = 0, lwd = 2)
## Retas de distância:
arrows(x0 = pontos[1, 1], x1 = c(0, pontos[3, 1]),
y0 = 0.3, y1 = 0.3,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
arrows(x0 = pontos[2, 1], x1 = c(0, pontos[4, 1]),
y0 = 0.6, y1 = 0.6,
angle = 90, code = 3, col = "red", lwd = 2, length = 0.1)
## Enumeração do eixo:
axis(side=1,seq(-7,4,1),pos=0)
## Legenda:
text(pontos,labels = rownames(pontos), pos = 3, offset = 1, font = 2)
text(x = pontos[1, 1]/2, labels = rownames(pontos)[1], y = 0.3,
pos = 3, font = 2)
text(x = pontos[2, 1]/2, labels = rownames(pontos)[2], y = 0.6,
pos = 3, font = 2)
text(x = pontos[3, 1]/2, labels = rownames(pontos)[3], y = 0.3,
pos = 3, font = 2)
text(x = pontos[4, 1]/2, labels = rownames(pontos)[4], y = 0.6,
pos = 3, font = 2)
text(y = 0, x = (pontos[2, 1] + pontos[4, 1])/2,
labels = "Gráfico Unidimensional para Avaliação das Desigualdades",
pos = 1, offset = 3, font = 2)
